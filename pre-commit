#!/bin/bash

# Path to the pre-commit hook script
HOOK_PATH=".git/hooks/pre-commit"

# Create the pre-commit hook script
cat > $HOOK_PATH << 'EOL'
#!/bin/bash

# Check for sensitive files
SENSITIVE_PATTERNS=(
    "GoogleService-Info.plist"
    "\.env"
    "\.pem$"
    "\.key$"
    "\.keystore$"
    "\.p12$"
    "\.cer$"
    "\.mobileprovision$"
    "password"
    "secret"
    "credential"
    "private_key"
    "api[_-]key"
    "auth[_-]token"
    "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}"  # Email addresses
)

# Get staged files
STAGED_FILES=$(git diff --cached --name-only)

# Check each pattern
for pattern in "${SENSITIVE_PATTERNS[@]}"; do
    MATCHES=$(echo "$STAGED_FILES" | grep -iE "$pattern")
    if [ ! -z "$MATCHES" ]; then
        echo "❌ Potential sensitive data detected in:"
        echo "$MATCHES"
        echo "Please remove sensitive data before committing."
        exit 1
    fi
done

# Check for potential hardcoded secrets in code
git diff --cached -U0 | grep -i "^+" | grep -iE '(password|secret|key|token|credential).*[=:][^=:]*['"'"'"][^'"'"']*['"'"'"]' > /dev/null
if [ $? -eq 0 ]; then
    echo "❌ Potential hardcoded secrets detected in changes."
    echo "Please review your changes and remove any sensitive data."
    exit 1
fi

# Run SwiftLint
SWIFT_LINT_OUTPUT=$(swiftlint lint --quiet)

if [ -n "$SWIFT_LINT_OUTPUT" ]; then
    echo "❌ SwiftLint found issues:"
    echo "$SWIFT_LINT_OUTPUT"
    exit 1
fi

echo "✅ Pre-commit checks passed"
exit 0
EOL

# Make the hook executable
chmod +x $HOOK_PATH 